services:
  #----------------------------------------
  # Backend services
  #----------------------------------------
  redis:
    image: redis:7
    container_name: correctomatic-redis
    # Sets the password for the redis server and
    # enables the appendonly mode
    command: bash -c "redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}"
    ports:
      - "6379:6379"

  #----------------------------------------
  # Monitoring services
  #----------------------------------------
  redis-insight:
    image: redis/redisinsight
    container_name: correctomatic-redisinsight
    ports:
      - "5540:5540"
    # I don't know how to initialize the connection data
    # You should enter the connection data manually in the web interface,
    # so I've created a volume to persist the data
    volumes:
      - redisinsight:/data

  bullmq-dashboard:
    image: igrek8/bullmq-dashboard
    container_name: correctomatic-dashboard
    depends_on:
      - redis
    ports:
      - "3000:3000"
    # TO-DO: this image doesn't addmit setting a user
    command: [
      "--redis-host", "redis",
      "--bullmq-prefix", "bull",
      "--redis-password", "${REDIS_PASSWORD}"
      ]

  #----------------------------------------
  # Correctomatic services
  #----------------------------------------
  api: # API service for sending works to the correction queue
    build:
      context: ./correctomatic/api
      args:
        SHARED_FOLDER: /tmp/correctomatic-uploads
    depends_on:
      - redis
    ports:
      - "8080:8080"
    user: "node"
    volumes:
      - shared_folder:/tmp/correctomatic-uploads
      # Use this for testing correction starter in local
      # - /tmp/correctomatic-uploads:/tmp/correctomatic-uploads
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_USER: default
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      UPLOAD_DIRECTORY: /tmp/correctomatic-uploads

  # This is the base image for the correction containers
  runner_base:
    build:
      context: ./correctomatic/runner_base
      args:
        SHARED_FOLDER: /tmp/correctomatic-uploads
        # This MUST match the group ID of the Docker group on your host
        # Specify it in the .env file
        DOCKER_GROUP_ID: ${DOCKER_GROUP_ID}
        DELAY_SECONDS: 10 # To give some time to RabbitMQ to start
    image: correctomatic_runner_base
    entrypoint: ["echo", "This is the base image for the correction containers"]

  # Process for starting the correction containers
  starter:
    image: correctomatic_runner_base
    depends_on:
      - runner_base
      - redis
    user: "node"
    entrypoint: ["/delayed_start.sh", "starter"]
    volumes:
      - shared_folder:/tmp/correctomatic-uploads
      # This volume is needed to communicate with the Docker daemon on the host
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_USER: default
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      # Uncomment for setting the log level
      LOG_LEVEL: "debug"
      # Uncomment for debugging the completer: if 'S', containers should be started by hand
      DONT_START_CONTAINER: S


volumes:
  redisinsight:   # Connection data is saved here
  redis_data:     # For persisting bullmq data
  shared_folder:  # For sharing files between the API and the correction worker
